# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET (QC)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-deps:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [ 'TeCLI.Tools', 'TeCLI.Core' ]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v1.1.1
      with:
        versionSpec: '5.x'

    - name: Determine Version
      id: gitv
      uses: gittools/actions/gitversion/execute@v1.1.1

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Build ${{matrix.project}}
      run: dotnet build --configuration Release ${{ matrix.project }}/${{ matrix.project }}.csproj

    - name: Pack (if missing nupkg) ${{matrix.project}}
      if: ${{ hashFiles('${{ matrix.project }}/bin/Release/${{ matrix.project }}.${{ env.GitVersion_nuGetVersionV2 }}.nupkg') != '' }}
      run: dotnet pack --configuration Release ${{ matrix.project }}/${{ matrix.project }}.csproj

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.project }}
        path: ${{ matrix.project }}/bin/Release/${{ matrix.project }}.${{ env.GitVersion_nuGetVersionV2 }}.nupkg

  build-libs:
    needs: build-deps

    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [ 'TeCLI.Extensions.DependencyInjection', 'TeCLI' ]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v1.1.1
      with:
        versionSpec: '5.x'

    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v1.1.1
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - uses: actions/download-artifact@v4
      with:
        path: ./.packages
        merge-multiple: true

    - name: Build ${{matrix.project}}
      run: dotnet build --configuration Release ${{ matrix.project }}/${{ matrix.project }}.csproj

    - name: Pack (if missing nupkg) ${{matrix.project}}
      if: ${{ hashFiles('${{ matrix.project }}/bin/Release/${{ matrix.project }}.${{ env.GitVersion_nuGetVersionV2 }}.nupkg') != '' }}
      run: dotnet pack --configuration Release ${{ matrix.project }}/${{ matrix.project }}.csproj

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.project }}
        path: ${{ matrix.project }}/bin/Release/${{ matrix.project }}.${{ env.GitVersion_nuGetVersionV2 }}.nupkg